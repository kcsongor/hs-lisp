(def head (
  [(: x xs)] x))

(def tail (
  [(: x xs)] xs))

(def reverse (
  [[]]       []
  [(: x xs)] [(++ xs [x])]
))

(def map (
  [f []]       []
  [f (: x xs)] (: (f x) (map f xs))
))

(def singleton (
  [[x]] True
  [x] False
))

(def head2 (
  [(++ [x y] rest)] [x y]
))

(def head2_2 (
  [(: x (: y rest))] [x y]
))

(def zip (
  [(: a as) (: b bs)] (: (, a b) (zip as bs))
  [as bs] []
))
